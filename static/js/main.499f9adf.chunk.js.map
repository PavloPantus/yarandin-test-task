{"version":3,"sources":["components/Loader/Loader.js","components/DataItem/DataItem.js","components/DataList/DataList.js","api.js","App.js","index.js"],"names":["Loader","react_default","a","createElement","className","src","alt","DataItem","_ref","dataItem","handleEntities","movieDataWithLinks","Object","entries","map","data","key","type","onClick","DataList","_useState","useState","_useState2","slicedToArray","dataFromServer","setdataFromServer","_useState3","_useState4","subHeading","setSubHeading","_useState5","_useState6","isLoading","setIsloading","_useState7","_useState8","searchQuery","setSearchQuery","subHeadingRef","useRef","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","results","stop","links","newSubHeading","currentEntity","entityTitle","title","name","concat","toUpperCase","current","scrollIntoView","requests","link","Promise","all","then","responses","dataPromises","Array","isArray","sortedByNames","toConsumableArray","length","undefined","sort","b","localeCompare","finally","visibleData","useMemo","filter","valuesToCheck","values","item","i","toLowerCase","includes","components_Loader_Loader","ref","placeholder","value","onChange","_ref2","target","components_DataItem_DataItem","App","components_DataList_DataList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.499f9adf.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <div className=\"loader__window\">\n      <img\n        className=\"loader__logo\"\n        src=\"./images/star-ship.png\"\n        alt=\"\"\n      />\n      Loading data ...\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport './DataItem.scss';\n\nconst DataItem = ({ dataItem, handleEntities }) => {\n  const movieData = Object.entries(dataItem);\n\n  const movieDataWithLinks = movieData.map(\n    (data) => {\n      if (typeof data[1] !== 'object') {\n        return (\n          <div\n            key={data[0]}\n            className=\"item__container\"\n          >\n            <p className=\"item__key\">\n              {data[0]}\n            </p>\n            <p className=\"item__value\">\n              {data[1]}\n            </p>\n\n          </div>\n        );\n      }\n\n      return (\n        <div\n          key={data[0]}\n          className=\"item__container\"\n        >\n          <button\n            type=\"button\"\n            onClick={() => {\n              handleEntities(data[1], data[0], dataItem);\n            }}\n\n            className=\"item__entity\"\n          >\n            See\n            {' '}\n            {data[0]}\n          </button>\n        </div>\n      );\n    }\n  );\n\n  return (\n    <li className=\"item\">\n      {\n        movieDataWithLinks.map(data => data)\n      }\n    </li>\n  );\n};\n\nexport default DataItem;\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport './DataList.scss';\nimport { baseUrl } from '../../api';\nimport Loader from '../Loader/Loader';\nimport DataItem from '../DataItem/DataItem';\n\nconst DataList = () => {\n  const [dataFromServer, setdataFromServer] = useState([]);\n  const [subHeading, setSubHeading] = useState('Films');\n  const [isLoading, setIsloading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const subHeadingRef = useRef();\n\n  useEffect(() => {\n    (async() => {\n      setIsloading(true);\n\n      const response = await fetch(baseUrl);\n      const data = await response.json();\n\n      setdataFromServer(data.results);\n      setIsloading(false);\n    })();\n  }, []);\n\n  const handleEntities = (links, newSubHeading, currentEntity) => {\n    setIsloading(true);\n\n    const entityTitle = currentEntity.title || currentEntity.name;\n\n    if (links === null) {\n      setSubHeading(\n        `we cant find\n               ${newSubHeading.toUpperCase()}\n               of ${entityTitle}`\n      );\n\n      subHeadingRef.current.scrollIntoView();\n\n      return;\n    }\n\n    setSubHeading(`${newSubHeading.toUpperCase()}\n     of ${entityTitle}`);\n\n    const requests = links.map(link => fetch(link));\n\n    Promise.all(requests)\n      .then(responses => responses.map(\n        response => response.json()\n      ))\n      .then(dataPromises => Promise.all(dataPromises))\n      .then((data) => {\n        if (Array.isArray(data)) {\n          const sortedByNames = [...data];\n\n          if (data.length === 0) {\n            setSubHeading(\n              `we cant find\n               ${newSubHeading.toUpperCase()}\n               of ${entityTitle}`\n            );\n\n            return;\n          }\n\n          if (data[0].name !== undefined) {\n            sortedByNames.sort(\n              (a, b) => a.name.localeCompare(b.name)\n            );\n          }\n\n          setdataFromServer(sortedByNames);\n\n          return;\n        }\n        setdataFromServer(data);\n      })\n      .finally(() => {\n        setIsloading(false);\n        subHeadingRef.current.scrollIntoView();\n      });\n  };\n\n  const handleSearchInput = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const visibleData = useMemo(() => dataFromServer.filter(\n    (data) => {\n      if (searchQuery === '') {\n        return true;\n      }\n\n      const valuesToCheck = Object.values(data)\n        .filter(item => (typeof item === 'string'));\n\n      for (let i = 0; i < valuesToCheck.length; i += 1) {\n        if (valuesToCheck[i].toLowerCase()\n          .includes(searchQuery.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  ), [searchQuery, dataFromServer]);\n\n  return (\n    <main>\n      <section className=\"data-list-section\">\n        {isLoading\n                && (\n                  <Loader />\n                )}\n\n        <h2\n          ref={subHeadingRef}\n          className=\"data-list-section__subHeading\"\n        >\n          {subHeading}\n        </h2>\n\n        <div className=\"data-list-section__search-container\">\n          <input\n            placeholder=\"Type for search\"\n            value={searchQuery}\n            onChange={handleSearchInput}\n            className=\"data-list-section__search-input\"\n            type=\"text\"\n          />\n        </div>\n\n        <ul className=\"data\">\n          {\n            visibleData\n              .map(\n                dataItem => (\n                  <DataItem\n                    key={dataItem.title || dataItem.name}\n                    handleEntities={handleEntities}\n                    dataItem={dataItem}\n\n                  />\n                )\n              )\n          }\n        </ul>\n\n      </section>\n    </main>\n  );\n};\n\nexport default DataList;\n","export const baseUrl = 'https://swapi.co/api/films/';\n","import React from 'react';\nimport './App.scss';\nimport DataList from './components/DataList/DataList';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__heading\">\n        STAR WARS INFO\n      </h1>\n      <DataList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}