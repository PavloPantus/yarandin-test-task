{"version":3,"sources":["api.js","App.js","index.js"],"names":["baseUrl","App","_useState","useState","_useState2","Object","slicedToArray","dataFromServer","setdataFromServer","_useState3","_useState4","subHeading","setSubHeading","_useState5","_useState6","isLoading","setIsloading","_useState7","_useState8","searchQuery","setSearchQuery","subHeadingRef","useRef","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","results","stop","visibleData","useMemo","filter","valuesToCheck","values","item","i","length","toLowerCase","includes","react_default","createElement","className","ref","placeholder","value","onChange","_ref2","target","type","map","dataItem","movieDataWithLinks","entries","onClick","links","newSubHeading","toUpperCase","requests","link","Promise","all","then","responses","dataPromises","Array","isArray","sortedByNames","toConsumableArray","concat","undefined","name","sort","b","localeCompare","finally","current","scrollIntoView","handleEntities","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ac89ac9.chunk.js","sourcesContent":["export const baseUrl = 'https://swapi.co/api/films/';\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport './App.scss';\nimport { baseUrl } from './api';\n\nfunction App() {\n  const [dataFromServer, setdataFromServer] = useState([]);\n  const [subHeading, setSubHeading] = useState('Films');\n  const [isLoading, setIsloading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const subHeadingRef = useRef();\n\n  useEffect(() => {\n    (async() => {\n      setIsloading(true);\n\n      const response = await fetch(baseUrl);\n      const data = await response.json();\n\n      setdataFromServer(data.results);\n      setIsloading(false);\n    })();\n  }, []);\n\n  const handleEntities = (links, newSubHeading) => {\n    setIsloading(true);\n\n    setSubHeading(newSubHeading.toUpperCase());\n\n    const requests = links.map(link => fetch(link));\n\n    Promise.all(requests)\n      .then(responses => responses.map(\n        response => response.json()\n      ))\n      .then(dataPromises => Promise.all(dataPromises))\n      .then((data) => {\n        if (Array.isArray(data)) {\n          const sortedByNames = [...data];\n\n          if (data.length === 0) {\n            setSubHeading(\n              `we cant find ${newSubHeading.toUpperCase()}`\n            );\n\n            return;\n          }\n\n          if (data[0].name !== undefined) {\n            sortedByNames.sort(\n              (a, b) => a.name.localeCompare(b.name)\n            );\n          }\n\n          setdataFromServer(sortedByNames);\n\n          return;\n        }\n        setdataFromServer(data);\n      })\n      .finally(() => {\n        setIsloading(false);\n        subHeadingRef.current.scrollIntoView();\n      });\n  };\n\n  const handleSearchInput = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const visibleData = useMemo(() => dataFromServer.filter(\n    (data) => {\n      if (searchQuery === '') {\n        return true;\n      }\n\n      const valuesToCheck = Object.values(data)\n        .filter(item => (typeof item === 'string'));\n\n      for (let i = 0; i < valuesToCheck.length; i += 1) {\n        if (valuesToCheck[i].toLowerCase()\n          .includes(searchQuery.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  ), [searchQuery, dataFromServer]);\n\n  return (\n    <main>\n      <section className=\"data-list-section\">\n        {isLoading\n        && (\n          <div className=\"loader\">\n            <div className=\"loader__window\">\n              Loading data ...\n            </div>\n          </div>\n        )}\n        <h1 className=\"data-list-section__heading\">\n          STAR WARS INFO\n        </h1>\n\n        <h2\n          ref={subHeadingRef}\n          className=\"data-list-section__subHeading\"\n        >\n          {subHeading}\n        </h2>\n\n        <div className=\"data-list-section__search-container\">\n          <input\n            placeholder=\"Type for search\"\n            value={searchQuery}\n            onChange={handleSearchInput}\n            className=\"data-list-section__search-input\"\n            type=\"text\"\n          />\n        </div>\n\n        <ul className=\"data\">\n          {\n            visibleData\n              .map(\n                (dataItem) => {\n                  const movieData = Object.entries(dataItem);\n                  const movieDataWithLinks = movieData.map(\n                    (data) => {\n                      if (typeof data[1] !== 'object') {\n                        return (\n                          <div className=\"data__container\">\n                            <p className=\"data__key\">\n                              {data[0]}\n                            </p>\n                            <p className=\"data__value\">\n                              {data[1]}\n                            </p>\n\n                          </div>\n                        );\n                      }\n\n                      return (\n                        <div className=\"data__container\">\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              handleEntities(data[1], data[0]);\n                            }}\n\n                            className=\"data__entity\"\n                          >\n                            See\n                            {' '}\n                            {data[0]}\n                          </button>\n                        </div>\n                      );\n                    }\n                  );\n\n                  return (\n                    <li className=\"data__item\">\n                      {\n                        movieDataWithLinks.map(data => data)\n                      }\n                    </li>\n                  );\n                }\n              )\n          }\n        </ul>\n\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}